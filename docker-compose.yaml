services:
  mysql:
    image: 'mysql:8.0'
    command: '--authentication_policy=mysql_native_password'
    container_name: sas-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_sandbox
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    ports:
      - "3366:3306"

  buggregator:
    image: ghcr.io/buggregator/server:latest
    container_name: sas-buggregator
    ports:
      - "8000:8000"
      - "1025:1025"
      - "9912:9912"
      - "9913:9913"

  trap:
    build:
      dockerfile: ./docker/trap/Dockerfile
    environment:
      TRAP_TCP_HOST: 0.0.0.0

  app:
    build: ./docker/roadrunner
    entrypoint: /docker-entrypoint.sh
    container_name: sas-app
    working_dir: /srv
    depends_on:
      mysql:
        condition: service_started
      kafka:
        condition: service_healthy
      trap:
        condition: service_started
    volumes:
      - ./src/app:/srv
      - ./docker/roadrunner/entrypoint.sh:/docker-entrypoint.sh:ro
    environment:
      PHP_IDE_CONFIG: serverName=app
    ports:
      - "8080:8080"
      - "10101:10101"

  app-consumer:
    build: ./docker/roadrunner
    entrypoint: /docker-entrypoint.sh
    container_name: sas-app-consumer
    working_dir: /srv
    volumes:
      - ./src/app-consumer:/srv
      - ./docker/roadrunner/entrypoint.sh:/docker-entrypoint.sh:ro
    environment:
      PHP_IDE_CONFIG: serverName=app-consumer
    ports:
      - "8081:8080"
    depends_on:
      kafka:
        condition: service_healthy

  adminer:
    container_name: sas-adminer
    image: adminer:5
    depends_on:
      - mysql
    ports:
      - "8082:8080"

  zookeeper:
    container_name: sas-zookeeper
    image: confluentinc/cp-zookeeper
    environment:
      ZOO_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: sas-kafka
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka:/var/lib/zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-ui:
    container_name: sas-kafka-ui
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
    ports:
      - "8091:8080"

  collector:
    image: otel/opentelemetry-collector-contrib
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./docker/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4318:4318"
      - "4317:4317"

  zipkin:
    image: openzipkin/zipkin-slim
    ports:
      - "9411:9411"

  minio:
    image: quay.io/minio/minio:latest
    container_name: sas-minio
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    ports:
      - "9000:9000" # phpStorm may listen this port
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    profiles:
      - minio

volumes:
  mysql: ~
  kafka: ~
  minio: ~
